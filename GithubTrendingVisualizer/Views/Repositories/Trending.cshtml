@using GithubTrendingVisualizer.Models.Repositories
@using Octokit
@model RepositoriesViewModel

<div id="repositories-content" class="ui container">

    @* Title *@
    <h1 class="ui dividing header">
        <div class="content">
            Trending in open source
            <div class="sub header">
                See what the GitHub community is most excited about today. (@Model.RateLimit.Remaining/@Model.RateLimit.Limit)
            </div>
        </div>
    </h1>

    @* Item list *@
    <div class="ui middle aligned selection items list">

        @foreach (Repository repository in Model.Repositories)
        {
            string language;
            switch (repository.Language)
            {
                case "C++":
                    language = "CPlusPlus";
                    break;

                case "C#":
                    language = "CSharp";
                    break;

                case "Objective-C":
                    language = "ObjectiveC";
                    break;

                case "Objective-C++":
                    language = "ObjectiveCPlusPlus";
                    break;

                default:
                    language = repository.Language;
                    break;
            }

            <div class="item card">

                @* Image *@
                <div class="ui tiny image" title="@repository.Language">
                    <img class="circle" src="images/languages/@(language).svg" onerror="this.src = 'images/languages/default.svg'">
                </div>

                @* Content *@
                <div class="content">

                    @* Header *@
                    <a href="@repository.HtmlUrl" class="header">
                        <h2>
                            @repository.Name
                        </h2>
                    </a>
                    
                    @* Meta *@
                    <div class="meta">
                        
                        @* Forks count *@
                        <span>
                            <i class="star icon"></i>
                            @repository.StargazersCount.ToString("N0")
                        </span>
                        
                        @* Stars count *@
                        <span>
                            <i class="fork icon"></i>
                            @repository.ForksCount.ToString("N0")
                        </span>

                    </div>

                    @* Description *@
                    <div class="description">
                        @repository.Description
                    </div>

                    @* Extra *@
                    <div class="extra">

                        @* Save button *@
                        <div id="save-repository-button" class="ui right floated primary button">
                            <i class="save icon"></i>
                            Save
                        </div>

                        @* Owner *@
                        <a href="@repository.Owner.HtmlUrl" class="ui left floated item">
                            <img class="ui avatar image square" src="@repository.Owner.AvatarUrl">
                            <span>@repository.Owner.Login</span>
                        </a>

                    </div>

                </div>

            </div>
        }

    </div>

    @* Pagination *@
    <div class="ui pagination menu">

        @if (Model.Page > 2)
            {
            <a asp-action="Trending" asp-route-page="1" class="item">
                1
            </a>
        }
        @if (Model.Page > 3)
        {
            <div class="disabled item">
                ...
            </div>
        }

        @if (Model.Page > 1)
        {
            <a asp-action="Trending" asp-route-page="@(Model.Page - 1)" class="item">
                @(Model.Page - 1)
            </a>
        }

        <a class="item active">
            @(Model.Page)
        </a>

        @if (Model.Page < 100)
        {
            <a asp-action="Trending" asp-route-page="@(Model.Page + 1)" class="item">
                @(Model.Page + 1)
            </a>
        }

        @if (Model.Page < 98)
        {
            <div class="disabled item">
                ...
            </div>
        }

        @if (Model.Page < 99)
        {
            <a asp-action="Trending" asp-route-page="100" class="item">
                100
            </a>
        }

    </div>

    <br />
    <br />

</div>